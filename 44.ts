// Pentagon numbers
// Problem 44 
// Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

// 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

// It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

// Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

class eu44 {
    static solve() {
        console.log('starting eu 44')
        let pentagonalNumbers: {[keys: number]: boolean} = {}
        let lastPentagonalIndex = 0
        let lastPentagonalValue = 0
        function nextPentagonal() {
            lastPentagonalIndex = lastPentagonalIndex + 1
            lastPentagonalValue = lastPentagonalIndex * (3 * lastPentagonalIndex - 1) / 2
            pentagonalNumbers[lastPentagonalValue] = true
        }
        function toPentagonal(index: number) {
            return index * (3 * index - 1) / 2
        }
        function isPentagonal(testNumber: number){
            while(testNumber > lastPentagonalValue ){
                nextPentagonal()
            }
            return pentagonalNumbers[testNumber]
        }
        let PkValue = 1
        let PkIndex = 1
        let PjValue = 1
        let PjIndex = 1
        let foundSolution = false

        let D = PkValue - PjValue
        let sum = PkValue + PjValue
        while(!foundSolution){
            D = PkValue - PjValue
            sum = PkValue + PjValue
            if(isPentagonal(D) && isPentagonal(sum)){
                foundSolution = true
                console.log('Found solution with Pk:', PkValue, 'Pj:', PjValue, 'Sum:', sum, 'Diff, D:', D)
            } else {
                PjIndex = PjIndex - 1
                PjValue = toPentagonal(PjIndex)
            }
            // PkValue - PjValue'
            if(PjIndex <= 0){
                PkIndex = PkIndex + 1
                PkValue = toPentagonal(PkIndex)
                PjIndex = PkIndex
                PjValue = toPentagonal(PjIndex)
            }
        }
        console.log('D is', D)
    }
}
eu44.solve()
